package com.platon.privacy.contracts;

import com.alaya.abi.wasm.WasmEventEncoder;
import com.alaya.abi.wasm.WasmFunctionEncoder;
import com.alaya.abi.wasm.datatypes.WasmEvent;
import com.alaya.abi.wasm.datatypes.WasmEventParameter;
import com.alaya.abi.wasm.datatypes.WasmFunction;
import com.alaya.crypto.Credentials;
import com.alaya.protocol.Web3j;
import com.alaya.protocol.core.DefaultBlockParameter;
import com.alaya.protocol.core.RemoteCall;
import com.alaya.protocol.core.methods.request.PlatonFilter;
import com.alaya.protocol.core.methods.response.Log;
import com.alaya.protocol.core.methods.response.TransactionReceipt;
import com.alaya.rlp.wasm.datatypes.Int64;
import com.alaya.rlp.wasm.datatypes.Uint128;
import com.alaya.rlp.wasm.datatypes.Uint16;
import com.alaya.rlp.wasm.datatypes.Uint32;
import com.alaya.rlp.wasm.datatypes.WasmAddress;
import com.alaya.tx.TransactionManager;
import com.alaya.tx.WasmContract;
import com.alaya.tx.gas.GasProvider;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the com.alaya.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.13.2.1.
 */
public class Multisig extends WasmContract {
    private static String BINARY_0 = "";

    private static String BINARY_1 = "ad7c7c4220862011422088847c2208200254ad7c2008200e201354ad2016200e54ad7c7c2202200854ad7c220842808080808080c0008350450440200541016a21050c010b200b423f88210120084201862002423f8884210820024201862003423f88842102200b420186210b200120034201868421030b200541ffff014e0440200942808080808080c0ffff008421090c020b200541004a0d02410120056b220641ff004b0d01200441106a200b2003200610d001200441206a20022008200541ff006a220510cf01200441306a200b2003200510cf01200420022008200610d0012004290330200441386a29030084420052ad200429032020042903108484210b200441286a290300200441186a29030084210320042903002102200441086a2903000c030b200942808080808080c0ffff008421090b420021010c020b200842ffffffffffff3f832005ad423086840b2009842109200b502003427f552003428080808080808080807f511b4504402009200242017c2201200254ad7c21090c010b200b2003428080808080808080807f858450450440200221010c010b2009200220024201837c2201200254ad7c21090b2000200937030820002001370300200441e0006a24000bdf2f021d7f047e230041e03c6b22062400200641d9273602d002200641b6026a211d419e7d20066b211e200641df026a211f200641e0026a410872211c200641e0026a410972211820064190396a2120200641e0026a211a200641b7026a211602400240024003400240200441ffffffff0720126b4a0d00200420126a2112024002400240027f0240027f02400240024002400240024002400240024002400240024002400240024020062802d00222092d000022070440410021042009210503400240200741ff01712207450d0020074125460d00200441016a210420052d00012107200541016a21050c010b0b200620053602d0022004210503400240200520096a22072d00004125470d00200741016a2d00004125470d00200441016a2104200541026a21050c010b0b200620073602d002200441ffffffff0720126b220b4a0d162000044020002009200410b7010b20040d17417f210f200741016a22042c000041506a220541094d0440200741036a2004200741026a2d000041244622071b21042005417f20071b210f4101201720071b21170b4100210503400240200620043602d00220042c0000220a41606a2207411f4b0d00410120077422074189d10471450d00200441016a2104200520077221050c010b0b0240200a412a460440027f0240200441016a220a2c000041506a220741094b0d00200441026a2d00004124470d00200320074102746a410a360200200441036a210a41012117200441016a2c000041047420026a41807a6a2802000c010b20170d0620004504402006200a3602d00241002117410021100c030b20012001280200220441046a3602004100211720042802000b21102006200a3602d0022010417f4a0d01410020106b211020054180c0007221050c010b200641d0026a10b80122104100480d1720062802d002210a0b41002104417f2108027f200a2d0000412e470440200a210741000c010b200a2d0001412a460440027f0240200a2c000241506a220741094b0d00200a2d00034124470d00200320074102746a410a360200200a41046a2107200a2c000241047420026a41807a6a2802000c010b20170d06200a41026a210741002000450d001a20012001280200220a41046a360200200a2802000b2108200620073602d0022008417f73411f760c010b2006200a41016a3602d002200641d0026a10b801210820062802d002210741010b210e03402004210a20072c000041bf7f6a220441394b0d03200741016a2107200a413a6c20046a41c0236a2d00002204417f6a4108490d000b200620073602d0022004450d030240024002402004411b460440200f417f4c0d010c070b200f4100480d012003200f4102746a200436020020062002200f4104746a22042903003703c0022006200441086a2903003703c8020b410021042000450d190c010b2000450d1a200641c0026a2004200110b9010b200541ffff7b712211200520054180c000711b210c2007417f6a2c00002204415f7120042004410f714103461b2004200a1b221341ad7f6a220441254d0d01201341bf7f6a220441064b0d040240200441016b0e03050005060b200641003602fc01200620062903c0023e02f8012006200641f8016a3602c002417f2108200641f8016a0c100b20000d192017450d18200241106a2107200341046a210541012104034002402004410a47047f200528020022090d01200405410a0b41027421040340200441046a2205412c460440410121120c1d0b200320046a2107200521042007280200450d000b0c040b20072009200110b901200741106a2107200541046a2105200441016a21040c000b000b200441016b0e25020202020b0202020202020202030207080303030208020202050c090a020204020f02020b0d0b200620073602d0020b41c02b41163602000c140b4100210541a027210f0c0f0b2008417f4c4100200e1b0d1020062903c002212220062903c80221212006410036028c03027f2021427f5704402021428080808080808080807f8521214101211541b1270c010b200c4180107104404101211541b4270c010b41b72741b227200c41017122151b0b211b02402022202110b30141014c0440200041202010201541036a2204201110ba012000201b201510b701200041cc2741d027201341207141057622051b41c42741c82720051b202220212022202110bb011b410310b7012000412020102004200c4180c0007310ba012010200420042010481b21040c010b200641e0016a202220212006418c036a10b401200641d0016a20062903e001222120062903e80122222021202210bc0120062903d0012221200641d8016a29030022224200420010d40104402006200628028c03417f6a36028c030b2013412072221941e100460440201b41096a201b201341207122091b210e02402008411a4b0d00411b20086b450d00200841656a210442808080808080c081c000212342002124034020040440200641f0006a2024202342808080808080c081c00010b501200441016a2104200641f8006a2903002123200629037021240c010b0b200e2d0000412d460440200641406b20212022428080808080808080807f852024202310bd01200641306a202420232006290340200641c8006a29030010bc01200641386a290300428080808080808080807f852122200629033021210c010b200641e0006a202120222024202310bc01200641d0006a2006290360200641e8006a2903002024202310bd01200641d8006a2903002122200629035021210b2015410272210a201a200628028c0322052005411f7522046a200473ad201a10be012204460440200641303a00df02201f21040b2004417e6a220f2013410f6a3a00002004417f6a412d412b20054100481b3a0000200c410871210b200641e0026a21050340200641206a2021202210bf01220710c001200641106a202120222006290320200641286a29030010bd0120062006290310200641186a29030042808080808080c081c00010b5012005220420074190276a2d00002009723a0000200641086a2903002122200629030021210240200441016a2205200641e0026a6b4101470d000240200b0d00200841004a0d00202120224200420010d401450d010b2004412e3a0001200441026a21050b202120224200420010d4010d000b417f210441fdffffff07200a201a200f6b22096a220b6b2008480d01200041202010200b200841026a2005200641e0026a6b22072005201e6a2008481b200720081b22056a2204200c10ba012000200e200a10b7012000413020102004200c418080047310ba012000200641e0026a200710b70120004130200520076b4100410010ba012000200f200910b7012000412020102004200c4180c0007310ba012010200420042010481b21040c010b200841004821040240202120224200420010d401450440200628028c03210e0c010b200641c0016a2021202242808080808080c08dc00010b5012006200628028c0341646a220e36028c03200641c8016a290300212220062903c00121210b4106200820041b210d20064190036a2020200e4100481b221421050340200641b0016a2021202210c101220410c201200641a0016a2021202220062903b001200641b8016a29030010bd0120064190016a20062903a001200641a8016a2903004280808080e59ab78ec00010b50120052004360200200541046a2105200629039001222120064198016a29030022224200420010d4010d000b2014210b0340200e41014e04402005417c6a2104200e411d200e411d481b2209ad21224100210703402004200b4f044020042007ad20043502002022867c22212021428094ebdc038022214280ec94a37c7e7c3e02002004417c6a21042021a721070c010b0b20070440200b417c6a220b20073602000b034020052204200b4b04402004417c6a2205280200450d010b0b200e20096b210e200421050c010b0b2006200e36028c03200d412d6a41096e41016a21110340200e417f4c044041002107418094ebdc0341094100200e6b200e4177481b220a762108417f200a74417f73210f200b2104034020042005490440200420042802002209200a7620076a360200200441046a21042009200f7120086c21070c010b0b2014200b200b41046a200b2802001b220b201941e600461b220420114102746a2007044020052007360200200541046a21050b2005200520046b41027520114a1b2105200a200e6a210e0c010b0b2006200e36028c03410021070240200b20054f0d002014200b6b41027541096c2107200b2802002109410a2104034020092004490d01200741016a21072004410a6c21040c000b000b200d41002007201941e600461b6b201941e70046220a200d410047716b2204200520146b41027541096c41776a4804402004418080096a2204200441096d220841776c6a2104410a21090340200441074c04402009410a6c2109200441016a21040c010b0b200841027420146a220f4184807c6a22082802002204200420096e221120096c220e6b2104024041002005200f4188807c6a22194620041b0d00024020114101714504404280808080808080b8c0002121420021222008200b4d0d012009418094ebdc03470d012008417c6a2d0000410171450d010b4280808080808080b8c0002121420121220b4280808080808080ff3f42808080808080c0ff3f42808080808080e0ff3f200420094101762211461b42808080808080e0ff3f20052019461b20042011491b212302402015450d00201b2d0000412d470d002023428080808080808080807f8421234280808080808080b84021210b20064180016a202220214200202310bc012008200e36020020062903800120064188016a2903002022202110d401450d0020082009200e6a2207360200200f4180807c6a210403402007418094ebdc034f0440200441046a41003602002004200b490440200b417c6a220b41003602000b2004200428020041016a22073602002004417c6a21040c010b0b200441046a21082014200b6b41027541096c2107200b2802002109410a2104034020092004490d01200741016a21072004410a6c21040c000b000b200841046a22042005200520044b1b21050b027f0340410020052209200b4d0d011a2009417c6a2205280200450d000b41010b210e0240200a450440200c41087121080c010b2007417f73417f200d4101200d1b220420074a2007417b4a7122051b20046a210d417f417e20051b20136a2113200c41087122080d00410921050240200e450d002009417c6a280200220a450d0041002105410a21040340200a2004700d01200541016a21052004410a6c21040c000b000b200920146b41027541096c41776a2104201341207241e60046044041002108200d200420056b22044100200441004a1b2204200d2004481b210d0c010b41002108200d200420076a20056b22044100200441004a1b2204200d2004481b210d0b417f2104200d41fdffffff0741feffffff072008200d72220f1b4a0d00200d200f4100476a41016a21110240201341207241e600472219450440200741ffffffff0720116b4a0d0220074100200741004a1b210a0c010b20072007411f7522056a200573ad201a10be01417e6a21050340201a20056b220a417e6a41014c0440200541016a41303a00002005417f6a21050c010b0b200520133a0000200541016a412d412b20074100481b3a0000200a41ffffffff0720116b4a0d010b200a20116a2207201541ffffffff07734a0d00200041202010200720156a2211200c10ba012000201b201510b7012000413020102011200c418080047310ba01024020194504402014200b200b20144b1b220721050340200520144d04402005350200201810be01210402402005200747044003402004200641e0026a4d0d022004417f6a220441303a00000c000b000b20042018470d00200641303a00e802201c21040b20002004201820046b10b701200541046a21050c010b0b200f0440200041d427410110b7010b03400240200520094f0d00200d4101480d002005350200201810be01210403402004200641e0026a4b04402004417f6a220441303a00000c010b0b20002004200d4109200d4109481b10b701200d41776a210d200541046a21050c010b0b20004130200d41096a4109410010ba010c010b2009200b41046a200e1b210a200b2107034002402007200a4f0d00200d4100480d0020182007350200201810be012204460440200641303a00e802201c21040b02402007200b47044003402004200641e0026a4d0d022004417f6a220441303a00000c000b000b20002004410110b701200441016a21042008454100200d4101481b0d00200041d427410110b7010b20002004201820046b2209200d200d20094a1b10b701200741046a2107200d20096b210d0c010b0b20004130200d41126a4112410010ba0120002005201a20056b10b7010b2000412020102011200c4180c0007310ba012010201120112010481b21040b200441004e0d110c100b20062802c002220441aa2720041b21090c010b4100210441c02b2802002105037f200441d80046047f41d80005200441c0146a2d0000200546047f200405200441016a21040c020b0b0b210741a015210903402007450d01034020092d00002104200941016a2205210920040d000b2007417f6a2107200521090c000b000b4100210541ffffffff07200820084100481b210a0240024003400240200520096a21042005200a46220f0d002004410371450d0020042d0000450d02200541016a21050c010b0b41002107200f0d01200a20056b210720042d0000450d01200520096a2104034020074104490d0220042802002205417f73200541fffdfb776a71418081828478710d022007417c6a2107200441046a21040c000b000b200a20056b21070b03400240410021052007450440410021040c010b20042d0000450d002007417f6a2107200441016a21040c010b0b2009200420096b200a20041b22076a210441a027210f2008417f4a04402011210c200721080c0d0b2011210c2007210820042d0000450d0c0c0d0b200620062903c0023c00b6024100210541a027210f41012108201d2109201621042011210c0c0b0b20062903c0022221427f5704402006420020217d22213703c0024101210541a0270c080b200c4180107104404101210541a1270c080b41a22741a027200c41017122051b0c070b20062903c00221212016210903402021504504402009417f6a22092021a74107714130723a0000202142038821210c010b0b4100210541a027210f200c410871450d072008201620096b220441016a200820044a1b21080c070b20084108200841084b1b2108200c410872210c41f80021130b2013412071210420062903c00221212016210903402021504504402009417f6a22092021a7410f714190276a2d00002004723a0000202142048821210c010b0b4100210541a027210f200c410871450d0520062903c002500d05201341047541a0276a210f410221050c050b41002104200a41ff0171220541074b0d080240024002400240024002400240200541016b0e07010203040f0506000b20062802c00220123602000c0e0b20062802c00220123602000c0d0b20062802c0022012ac3703000c0c0b20062802c00220123b01000c0b0b20062802c00220123a00000c0a0b20062802c00220123602000c090b20062802c0022012ac3703000c080b20062802c0020b21094100210420092105024003400240024020042008470440200528020022070d01200421080b20084100480d092000412020102008200c10ba0141002104034020042008460d0420092802002205450d0420054180014f0d02200620053a00f401200441016a220420084b0d042000200641f4016a410110b701200941046a21090c000b000b20074180014f0d00200620073a00f401200441016a2104200541046a21050c010b0b000b2000412020102008200c4180c0007310ba0120102008201020084a1b21040c060b4100210520062903c002212141a0270b210f2021201610be0121090b200e410020084100481b0d02200c41ffff7b71200c200e1b210c20062903c0022121024020080d00202150450d0041002108201621090c010b2008202150201620096b6a2204200820044a1b21080b201621040b200420096b220a20082008200a481b220841ffffffff0720056b4a0d00200520086a2207201020102007481b2204200b4a0d002000412020042007200c10ba012000200f200510b7012000413020042007200c418080047310ba01200041302008200a410010ba0120002009200a10b7012000412020042007200c4180c0007310ba010c010b0b41c02b41cb003602000b417f21120c010b410021120b200641e03c6a240020120bd40101057f024020002d00004120710d0020002802102203047f200305200010b2010d0120002802100b200028021422056b200249044020002001200220002802241106001a0f0b41002103024020002802504100480d0020012104034020022003460d01200341016a2103200220046a21062004417f6a220721042006417f6a2d0000410a470d000b20002001200220036b41016a220420002802241106002004490d01200220076a41016a2101200028021421052003417f6a21020b20052001200210591a2000200028021420026a3602140b0b5d01047f20002802002102034020022c000041506a220341094b450440417f21042000200241016a2202360200200141cc99b3e6004d047f417f20032001410a6c22016a200341ffffffff0720016b4a1b0520040b21010c010b0b20010ba10502017f017e230041106b220324000240200141776a220141114b0d00024002400240024002400240024002400240024002400240024002400240024002400240200141016b0e110102050304060708090a0b0c0d0e0f1011000b20022002280200220141046a360200200020012802003602000c110b20022002280200220141046a360200200020013402003703000c100b20022002280200220141046a360200200020013502003703000c0f0b20022002280200220141046a360200200020013402003703000c0e0b20022002280200220141046a360200200020013502003703000c0d0b2002200228020041076a417871220141086a360200200020012903003703000c0c0b20022002280200220141046a360200200020013201003703000c0b0b20022002280200220141046a360200200020013301003703000c0a0b20022002280200220141046a360200200020013000003703000c090b20022002280200220141046a360200200020013100003703000c080b2002200228020041076a417871220141086a360200200020012903003703000c070b20022002280200220141046a360200200020013502003703000c060b2002200228020041076a417871220141086a360200200020012903003703000c050b2002200228020041076a417871220141086a360200200020012903003703000c040b20022002280200220141046a360200200020013402003703000c030b20022002280200220141046a360200200020013502003703000c020b2002200228020041076a417871220141086a360200200320012b030010c3012000200341086a290300370308200020032903003703000c010b20022002280200410f6a417071220141106a3602002001290300210420002001290308370308200020043703000b200341106a24000b6c01017f23004180026b220524000240200220034c0d0020044180c004710d0020052001200220036b22024180022002418002491b101c210303402002418002494504402000200341800210b701200241807e6a21020c010b0b20002003200210b7010b20054180026a24000b63002000420052200142ffffffffffffffffff0083220142808080808080c0ffff0056200142808080808080c0ffff00511b2002420052200342ffffffffffffffffff0083220142808080808080c0ffff0056200142808080808080c0ffff00511b720bf70902037f037e230041f0006b22052400200442ffffffffffffffffff00832108024002402001427f7c2209427f51200242ffffffffffffffffff0083220a2009200154ad7c427f7c220942ffffffffffffbfffff0056200942ffffffffffffbfffff00511b4504402003427f7c2209427f5220082009200354ad7c427f7c220942ffffffffffffbfffff0054200942ffffffffffffbfffff00511b0d010b200150200a42808080808080c0ffff0054200a42808080808080c0ffff00511b45044020024280808080808020842104200121030c020b200350200842808080808080c0ffff0054200842808080808080c0ffff00511b450440200442808080808080208421040c020b2001200a42808080808080c0ffff00858450044042808080808080e0ffff00200220012003852002200485428080808080808080807f85845022061b21044200200120061b21030c020b2003200842808080808080c0ffff008584500d012001200a8450044020032008844200520d0220012003832103200220048321040c020b200320088450450d0020012103200221040c010b20052003200120032001562008200a562008200a511b22061b37036020052004200220061b220842ffffffffffff3f8337036820052002200420061b220242ffffffffffff3f83220437035820052001200320061b22013703502002423088a741ffff017121072008423088a741ffff01712206450440200541e0006a10d10121060b2007450440200541d0006a10d101210720052903582104200529035021010b200520014203862203370350200520052903602209420386220a370360200520052903684203862009423d8884428080808080808004842209370368200520044203862001423d888442808080808080800484220437035820022008852101200620076b220704402005027e200741ff004d0440200541306a20032004200710d001200541406b2003200441800120076b10cf012005200541386a290300220437035820052903302005290340200541c8006a29030084420052ad840c010b420021042005420037035842010b22033703500b02402001427f5704402005200a20037d22013703602005200920047d200a200354ad7d2203370368200120038450044042002103420021040c030b200342ffffffffffffff03560d01200541206a200120032001200310d20141746a220710cf012005200541286a2903002203370368200520052903202201370360200620076b21060c010b20052003200a7c220137036020052001200354ad200420097c7c2204370368200442808080808080800883500440200421030c010b200520044201882203370368200520014201832004423f86200142018884842201370360200641016a21060b2008428080808080808080807f832104200641ffff014e0440200442808080808080c0ffff00842104420021030c010b410021070240200641004a0440200621070c010b200520012003410120066b10d001200541106a20012003200641ff006a10cf012005200541086a2903002203370368200520052903002005290310200541186a29030084420052ad8422013703600b200342038842ffffffffffff3f832004842007ad423086842003423d8620014203888422042001a7410771220641044bad7c2203200454ad7c2003420183420020064104461b220120037c2203200154ad7c21040b2000200337030020002004370308200541f0006a24000b4501017f230041106b2205240020052001200220032004428080808080808080807f8510bc01200529030021012000200529030837030820002001370300200541106a24000b6602027f017e03402000428080808010544504402001417f6a220120002000420a80220442767e7ca74130723a0000200421000c010b0b2000a721020340200204402001417f6a220120022002410a6e220341766c6a4130723a0000200321020c010b0b20010b860101027f230041106b22032400027f41002001423088a741ffff0171220241ffff00490d001a41808080807841ffffffff0720014200531b20024181807f6a41204f0d001a20032000200142ffffffffffff3f8342808080808080c0008441ef800120026b10d0014100200328020022026b200220014200531b0b2102200341106a240020020b820102027f017e230041106b220324002000027e200145044042000c010b200320012001411f7522026a2002732202ad4200200267220241d1006a10cf01200341086a29030042808080808080c00085419e800120026bad4230867c200141808080807871ad42208684210420032903000b37030020002004370308200341106a24000b6e01037f230041106b22022400024020014200530d002001423088a741ffff0171220441ffff00490d00417f210320044181807f6a411f4b0d0020022000200142ffffffffffff3f8342808080808080c0008441ef800120046b10d001200228020021030b200241106a240020030b6a02017f017e230041106b220224002000027e200145044042000c010b20022001ad420041f000200167411f7322016b10cf01200241086a29030042808080808080c00085200141ffff006aad4230867c210320022903000b37030020002003370308200241106a24000b840102027f027e230041106b220224002001bd22044280808080088321052000027e200442ffffffff078322045004404200210442000c010b2002200442002004a7672203413c6a10cf01200241086a29030042808080808080c000854181f80020036bad42308684210420022903000b37030020002004200584370308200241106a24000bd10201037f230041b0026b220124002001200036020c200120003602ac0220014180026a41004128101c1a200120012802ac023602a8024100200141a8026a200141e0006a20014180026a10b60141004e044041cc282802001a418028280200210241c82828020041004c04404180282002415f713602000b027f0240024041b02828020045044041b02841d000360200419c284100360200419028420037030041ac28280200210341ac28200141106a3602000c010b4190282802000d010b417f41802810b2010d011a0b418028200141a8026a200141e0006a20014180026a10b6010b2100200241207121022003047f4180284100410041a4282802001106001a41b028410036020041ac282003360200419c28410036020041902841003602004194282802002103419428410036020041000520000b1a4180284180282802002002723602000b200141b0026a24000b3501017f230041106b220041d0ab0436020c41c42b200028020c41076a417871220036020041c82b200036020041cc2b3f003602000b10002002044020002001200210591a0b0b8d01002001417f6a220141034b044041000f0b0240024002400240200141016b0e03010203000b20002802002d00010f0b200028020022012d000141087420012d0002720f0b200028020022012d000241087420012d00014110747220012d0003720f0b200028020028000122014118742001410874418080fc07717220014108764180fe0371200141187672720b5b01027f2000027f0240200128020022054504400c010b200220036a200128020422014b0d0020012002490d00410020012003490d011a200220056a2104200120026b20032003417f461b0c010b41000b360204200020043602000b7b01037f0340024020002802102201200028020c460d00200141786a2802004504401001200028021021010b200141786a22022002280200417f6a220336020020030d002000200236021020002001417c6a2802002201200028020420016b220210076a10ca01200120002802006a22012002200110080c010b0b0b3601017f200028020820014904402001101b200028020020002802041059210220002001360208200020023602000b200020013602040bb70101027f20004504404100210041a429280200044041a42928020010cb0121000b419029280200044041902928020010cb0120007221000b41a029410136020041a029410036020020000f0b200028024c1a02402000280214200028021c460d0020004100410020002802241106001a20002802140d00417f0f0b20002802042201200028020822024704402000200120026bac410120002802281114001a0b2000410036021c200042003703102000420037020441000b040041000b2901017f200028021c2203200028021420036b1000200120021000200028021420026a200028021c6b0b0400427f0b5001017e0240200341c0007104402001200341406aad862102420021010c010b2003450d0020022003ad220486200141c00020036bad88842102200120048621010b20002001370300200020023703080b6001017e0240027e200341c0007104402002200341406aad8821014200210242000c010b2003450d01200241c00020036bad8620012003ad2204888421012002200488210242000b2104200120048421010b20002001370300200020023703080b5602037f027e230041106b22012400200120002903002204200041086a220229030022052004200510d201220341716a10cf012002200141086a29030037030020002001290300370300200141106a2400411020036b0b1701017f2000200120015022021b792002410674ad7ca70b6202037f027e230041106b22012400200120002903002205200041086a220329030022042005200420045022021b792002410674ad7ca7220241716a10cf01200020012903003703002003200141086a290300370300200141106a2400411020026b0bdb0102017f027e4101210402402000420052200142ffffffffffffffffff0083220542808080808080c0ffff0056200542808080808080c0ffff00511b0d002002420052200342ffffffffffffffffff0083220642808080808080c0ffff0056200642808080808080c0ffff00511b0d00200020028420052006848450044041000f0b20012003834200590440417f21042000200254200120035320012003511b0d0120002002852001200385844200520f0b417f21042000200256200120035520012003511b0d00200020028520012003858442005221040b20040b0b901f16004180080bed0461636c00000000000d9040617f3899de6f776e6572732e656e64282920213d2069746572002f686f6d652f6a757a69782f6a6174656c2f636f6e666964656e7469616c2d7472616e73616374696f6e2f636f6e7472616374732f6275696c642f2e2e2f7372632f6d756c74697369672f6d756c74697369672e637070005369676e5472616e73616374696f6e00696e76616c69642073656e6465720073697a65203e2030006e6f77202d206f6e655f7472616e73616374696f6e2e74696d657374616d705f203c20696e7436345f74286f6e655f7472616e73616374696f6e2e7365636f6e644c696d69745f29006f7574206f66207365636f6e64206c696d6974006f6e655f7472616e73616374696f6e2e7369676e6564416464726573735f2e656e642829203d3d207374643a3a66696e64286f6e655f7472616e73616374696f6e2e7369676e6564416464726573735f2e626567696e28292c206f6e655f7472616e73616374696f6e2e7369676e6564416464726573735f2e656e6428292c2073656e64657229006475706c6963617465207369676e6174757265000000ee4c868903418e3070656e64696e675f2e73697a652829203e2030002f7573722f6c6f63616c2f62696e2f2e2e2f706c61746f6e2e6364742f696e636c7564652f706c61746f6e2f726c705f73697a652e687070006f70657261746f723c3c006c697374537461636b206973206e6f7420656d7074790073756363657373006d756c7469736967207472616e73616374696f6e2065786563757465206661696c656400417373657274696f6e206661696c65643a00200066756e633a006c696e653a0066696c653a002573090a0041f80c0b0904000000050000000600418c0d0bdd0607000000050000000800000030203d3d207472616e73616374696f6e5f6964207c7c207472616e73616374696f6e5f6964203d3d207472616e73616374696f6e49645f002e2e2f696e636c7564652f6d756c74697369672f6163747561746f722e687070004368616e67654f776e657273416e64526571756972656400686176652070656e64696e67207472616e73616374696f6e006f776e6572732e73697a652829203e203000696e76616c6964206f776e657273006d5f64617461002f7573722f6c6f63616c2f62696e2f2e2e2f706c61746f6e2e6364742f696e636c7564652f706c61746f6e2f766563746f725f7265662e68006f70657261746f725b5d005f69203c206d5f636f756e74000000000000d96c676804051e557265717569726564203e2030202626206f776e6572732e73697a652829203e3d20726571756972656400696e76616c696420726571756972656400626164206361737400696e76616c6964207472616e73616374696f6e206964006c656e20213d2030002e2e2f696e636c7564652f707269766163792f636f6d6d6f6e2e687070006765745f7374617465006b657920646f6573206e6f742065786973740066696e64004765745472616e73616374696f6e496e666f007365636f6e645f6c696d6974203e203000507573685472616e73616374696f6e00696e76616c6964207365636f6e64206c696d697400696e697400507269766163795265766572744576656e74004d756c7469736967436c6f6e65004d756c7469736967437265617465004d756c74697369675472616e73616374696f6e45786563757465004d756c74697369675472616e73616374696f6e54696d656f7574005369676e4d756c74697369675472616e73616374696f6e004e65774d756c74697369675472616e73616374696f6e004368616e67654d756c7469736967004372656174654d756c746973696700696e76616c6964206d6574686f640a00546865206e756d626572206f66206d6574686f6420706172616d657465727320646f6573206e6f74206d617463680a004765744f776e65727300476574526571756972656400437265617465436f6e747261637400436c6f6e65436f6e74726163740047657450656e64696e675472616e73616374696f6e73006e6f206d6574686f6420746f2063616c6c0a0041f6130b8b10f03f000000000000244000000000000059400000000000408f40000000000088c34000000000006af8400000000080842e4100000000d01263410000000084d797410000000065cdcd41542122190d010203114b1c0c10040b1d121e27686e6f7071622005060f1314151a08160728241718090a0e1b1f252383827d262a2b3c3d3e3f43474a4d58595a5b5c5d5e5f60616364656667696a6b6c727374797a7b7c480000000000000000496c6c6567616c20627974652073657175656e636500446f6d61696e206572726f7200526573756c74206e6f7420726570726573656e7461626c65004e6f74206120747479005065726d697373696f6e2064656e696564004f7065726174696f6e206e6f74207065726d6974746564004e6f20737563682066696c65206f72206469726563746f7279004e6f20737563682070726f636573730046696c65206578697374730056616c756520746f6f206c6172676520666f7220646174612074797065004e6f207370616365206c656674206f6e20646576696365004f7574206f66206d656d6f7279005265736f75726365206275737900496e7465727275707465642073797374656d2063616c6c005265736f757263652074656d706f726172696c7920756e617661696c61626c6500496e76616c6964207365656b0043726f73732d646576696365206c696e6b00526561642d6f6e6c792066696c652073797374656d004469726563746f7279206e6f7420656d70747900436f6e6e656374696f6e2072657365742062792070656572004f7065726174696f6e2074696d6564206f757400436f6e6e656374696f6e207265667573656400486f737420697320646f776e00486f737420697320756e726561636861626c65004164647265737320696e207573650042726f6b656e207069706500492f4f206572726f72004e6f207375636820646576696365206f72206164647265737300426c6f636b20646576696365207265717569726564004e6f207375636820646576696365004e6f742061206469726563746f72790049732061206469726563746f727900546578742066696c652062757379004578656320666f726d6174206572726f7200496e76616c696420617267756d656e7400417267756d656e74206c69737420746f6f206c6f6e670053796d626f6c6963206c696e6b206c6f6f700046696c656e616d6520746f6f206c6f6e6700546f6f206d616e79206f70656e2066696c657320696e2073797374656d004e6f2066696c652064657363726970746f727320617661696c61626c65004261642066696c652064657363726970746f72004e6f206368696c642070726f636573730042616420616464726573730046696c6520746f6f206c6172676500546f6f206d616e79206c696e6b73004e6f206c6f636b7320617661696c61626c65005265736f7572636520646561646c6f636b20776f756c64206f63637572005374617465206e6f74207265636f76657261626c650050726576696f7573206f776e65722064696564004f7065726174696f6e2063616e63656c65640046756e6374696f6e206e6f7420696d706c656d656e746564004e6f206d657373616765206f6620646573697265642074797065004964656e7469666965722072656d6f76656400446576696365206e6f7420612073747265616d004e6f206461746120617661696c61626c65004465766963652074696d656f7574004f7574206f662073747265616d73207265736f7572636573004c696e6b20686173206265656e20736576657265640050726f746f636f6c206572726f7200426164206d6573736167650046696c652064657363726970746f7220696e20626164207374617465004e6f74206120736f636b65740044657374696e6174696f6e2061646472657373207265717569726564004d65737361676520746f6f206c617267650050726f746f636f6c2077726f6e67207479706520666f7220736f636b65740050726f746f636f6c206e6f7420617661696c61626c650050726f746f636f6c206e6f7420737570706f7274656400536f636b65742074797065206e6f7420737570706f72746564004e6f7420737570706f727465640050726f746f636f6c2066616d696c79206e6f7420737570706f7274656400416464726573732066616d696c79206e6f7420737570706f727465642062792070726f746f636f6c0041646472657373206e6f7420617661696c61626c65004e6574776f726b20697320646f776e004e6574776f726b20756e726561636861626c6500436f6e6e656374696f6e207265736574206279206e6574776f726b00436f6e6e656374696f6e2061626f72746564004e6f2062756666657220737061636520617661696c61626c6500536f636b657420697320636f6e6e656374656400536f636b6574206e6f7420636f6e6e65637465640043616e6e6f742073656e6420616674657220736f636b65742073687574646f776e004f7065726174696f6e20616c726561647920696e2070726f6772657373004f7065726174696f6e20696e2070726f6772657373005374616c652066696c652068616e646c650052656d6f746520492f4f206572726f720051756f7461206578636565646564004e6f206d656469756d20666f756e640057726f6e67206d656469756d2074797065004d756c7469686f7020617474656d70746564004e6f206572726f7220696e666f726d6174696f6e00000019000a00191919000000000500000000000009000000000b00000000000000001900110a191919030a0700011b090b18000009060b00000b000619000000191919004191240b210e000000000000000019000a0d191919000d00000200090e00000009000e00000e0041cb240b010c0041d7240b1513000000001300000000090c00000000000c00000c004185250b0110004191250b150f000000040f0000000009100000000000100000100041bf250b01120041cb250b1e11000000001100000000091200000000001200001200001a0000001a1a1a004182260b0e1a0000001a1a1a000000000000090041b3260b01140041bf260b151700000000170000000009140000000000140000140041ed260b01160041f9260b82011500000000150000000009160000000000160000160000303132333435363738394142434445462d2b2020203058307800286e756c6c29002d30582b30582030582d30782b307820307800696e6600494e46006e616e004e414e002e00257500417373657274696f6e206661696c65643a202573202825733a2025733a202564290a004180280b010500418c280b01090041a4280b0a0a0000000b000000c0150041bc280b01020041cc280b08ffffffffffffffff004191290b0114";

    public static String BINARY = BINARY_0 + BINARY_1;

    public static final String FUNC_GETREQUIRED = "GetRequired";

    public static final String FUNC_GETPENDINGTRANSACTIONS = "GetPendingTransactions";

    public static final String FUNC_SIGNTRANSACTION = "SignTransaction";

    public static final String FUNC_CHANGEOWNERSANDREQUIRED = "ChangeOwnersAndRequired";

    public static final String FUNC_GETOWNERS = "GetOwners";

    public static final String FUNC_CREATECONTRACT = "CreateContract";

    public static final String FUNC_CLONECONTRACT = "CloneContract";

    public static final String FUNC_PUSHTRANSACTION = "PushTransaction";

    public static final String FUNC_GETTRANSACTIONINFO = "GetTransactionInfo";

    public static final WasmEvent APPROVALEVENT_EVENT = new WasmEvent("ApprovalEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent CREATEMULTISIG_EVENT = new WasmEvent("CreateMultisig", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress[].class) , new WasmEventParameter(Uint16.class)));
    ;

    public static final WasmEvent CHANGEMULTISIG_EVENT = new WasmEvent("ChangeMultisig", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress[].class) , new WasmEventParameter(Uint16.class)));
    ;

    public static final WasmEvent NEWMULTISIGTRANSACTION_EVENT = new WasmEvent("NewMultisigTransaction", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(Uint32.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(byte[].class) , new WasmEventParameter(Uint32.class)));
    ;

    public static final WasmEvent SIGNMULTISIGTRANSACTION_EVENT = new WasmEvent("SignMultisigTransaction", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(Uint32.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class)));
    ;

    public static final WasmEvent MULTISIGTRANSACTIONTIMEOUT_EVENT = new WasmEvent("MultisigTransactionTimeout", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(Uint32.class, true)), Arrays.asList());
    ;

    public static final WasmEvent MULTISIGTRANSACTIONEXECUTE_EVENT = new WasmEvent("MultisigTransactionExecute", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(Uint32.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress[].class)));
    ;

    public static final WasmEvent MULTISIGCREATE_EVENT = new WasmEvent("MultisigCreate", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(Uint32.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class)));
    ;

    public static final WasmEvent MULTISIGCLONE_EVENT = new WasmEvent("MultisigClone", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(Uint32.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class)));
    ;

    public static final WasmEvent PRIVACYREVERTEVENT_EVENT = new WasmEvent("PrivacyRevertEvent", Arrays.asList(), Arrays.asList(new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent TRANSFEREVENT_EVENT = new WasmEvent("TransferEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    protected Multisig(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected Multisig(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public RemoteCall<Uint16> GetRequired() {
        final WasmFunction function = new WasmFunction(FUNC_GETREQUIRED, Arrays.asList(), Uint16.class);
        return executeRemoteCall(function, Uint16.class);
    }

    public RemoteCall<Transaction[]> GetPendingTransactions() {
        final WasmFunction function = new WasmFunction(FUNC_GETPENDINGTRANSACTIONS, Arrays.asList(), Transaction[].class);
        return executeRemoteCall(function, Transaction[].class);
    }

    public List<ApprovalEventEventResponse> getApprovalEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(APPROVALEVENT_EVENT, transactionReceipt);
        ArrayList<ApprovalEventEventResponse> responses = new ArrayList<ApprovalEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ApprovalEventEventResponse typedResponse = new ApprovalEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApprovalEventEventResponse> approvalEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ApprovalEventEventResponse>() {
            @Override
            public ApprovalEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(APPROVALEVENT_EVENT, log);
                ApprovalEventEventResponse typedResponse = new ApprovalEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<ApprovalEventEventResponse> approvalEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(APPROVALEVENT_EVENT));
        return approvalEventEventObservable(filter);
    }

    public List<CreateMultisigEventResponse> getCreateMultisigEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(CREATEMULTISIG_EVENT, transactionReceipt);
        ArrayList<CreateMultisigEventResponse> responses = new ArrayList<CreateMultisigEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            CreateMultisigEventResponse typedResponse = new CreateMultisigEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (WasmAddress[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint16) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<CreateMultisigEventResponse> createMultisigEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, CreateMultisigEventResponse>() {
            @Override
            public CreateMultisigEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(CREATEMULTISIG_EVENT, log);
                CreateMultisigEventResponse typedResponse = new CreateMultisigEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (WasmAddress[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint16) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<CreateMultisigEventResponse> createMultisigEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(CREATEMULTISIG_EVENT));
        return createMultisigEventObservable(filter);
    }

    public List<ChangeMultisigEventResponse> getChangeMultisigEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(CHANGEMULTISIG_EVENT, transactionReceipt);
        ArrayList<ChangeMultisigEventResponse> responses = new ArrayList<ChangeMultisigEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ChangeMultisigEventResponse typedResponse = new ChangeMultisigEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (WasmAddress[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint16) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ChangeMultisigEventResponse> changeMultisigEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ChangeMultisigEventResponse>() {
            @Override
            public ChangeMultisigEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(CHANGEMULTISIG_EVENT, log);
                ChangeMultisigEventResponse typedResponse = new ChangeMultisigEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (WasmAddress[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint16) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<ChangeMultisigEventResponse> changeMultisigEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(CHANGEMULTISIG_EVENT));
        return changeMultisigEventObservable(filter);
    }

    public List<NewMultisigTransactionEventResponse> getNewMultisigTransactionEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(NEWMULTISIGTRANSACTION_EVENT, transactionReceipt);
        ArrayList<NewMultisigTransactionEventResponse> responses = new ArrayList<NewMultisigTransactionEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            NewMultisigTransactionEventResponse typedResponse = new NewMultisigTransactionEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (byte[]) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (Uint32) eventValues.getNonIndexedValues().get(3);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<NewMultisigTransactionEventResponse> newMultisigTransactionEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, NewMultisigTransactionEventResponse>() {
            @Override
            public NewMultisigTransactionEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(NEWMULTISIGTRANSACTION_EVENT, log);
                NewMultisigTransactionEventResponse typedResponse = new NewMultisigTransactionEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (byte[]) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (Uint32) eventValues.getNonIndexedValues().get(3);
                return typedResponse;
            }
        });
    }

    public Observable<NewMultisigTransactionEventResponse> newMultisigTransactionEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(NEWMULTISIGTRANSACTION_EVENT));
        return newMultisigTransactionEventObservable(filter);
    }

    public List<SignMultisigTransactionEventResponse> getSignMultisigTransactionEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(SIGNMULTISIGTRANSACTION_EVENT, transactionReceipt);
        ArrayList<SignMultisigTransactionEventResponse> responses = new ArrayList<SignMultisigTransactionEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            SignMultisigTransactionEventResponse typedResponse = new SignMultisigTransactionEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<SignMultisigTransactionEventResponse> signMultisigTransactionEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, SignMultisigTransactionEventResponse>() {
            @Override
            public SignMultisigTransactionEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(SIGNMULTISIGTRANSACTION_EVENT, log);
                SignMultisigTransactionEventResponse typedResponse = new SignMultisigTransactionEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<SignMultisigTransactionEventResponse> signMultisigTransactionEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(SIGNMULTISIGTRANSACTION_EVENT));
        return signMultisigTransactionEventObservable(filter);
    }

    public List<MultisigTransactionTimeoutEventResponse> getMultisigTransactionTimeoutEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(MULTISIGTRANSACTIONTIMEOUT_EVENT, transactionReceipt);
        ArrayList<MultisigTransactionTimeoutEventResponse> responses = new ArrayList<MultisigTransactionTimeoutEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            MultisigTransactionTimeoutEventResponse typedResponse = new MultisigTransactionTimeoutEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<MultisigTransactionTimeoutEventResponse> multisigTransactionTimeoutEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, MultisigTransactionTimeoutEventResponse>() {
            @Override
            public MultisigTransactionTimeoutEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(MULTISIGTRANSACTIONTIMEOUT_EVENT, log);
                MultisigTransactionTimeoutEventResponse typedResponse = new MultisigTransactionTimeoutEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<MultisigTransactionTimeoutEventResponse> multisigTransactionTimeoutEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(MULTISIGTRANSACTIONTIMEOUT_EVENT));
        return multisigTransactionTimeoutEventObservable(filter);
    }

    public List<MultisigTransactionExecuteEventResponse> getMultisigTransactionExecuteEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(MULTISIGTRANSACTIONEXECUTE_EVENT, transactionReceipt);
        ArrayList<MultisigTransactionExecuteEventResponse> responses = new ArrayList<MultisigTransactionExecuteEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            MultisigTransactionExecuteEventResponse typedResponse = new MultisigTransactionExecuteEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (WasmAddress[]) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<MultisigTransactionExecuteEventResponse> multisigTransactionExecuteEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, MultisigTransactionExecuteEventResponse>() {
            @Override
            public MultisigTransactionExecuteEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(MULTISIGTRANSACTIONEXECUTE_EVENT, log);
                MultisigTransactionExecuteEventResponse typedResponse = new MultisigTransactionExecuteEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (WasmAddress[]) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<MultisigTransactionExecuteEventResponse> multisigTransactionExecuteEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(MULTISIGTRANSACTIONEXECUTE_EVENT));
        return multisigTransactionExecuteEventObservable(filter);
    }

    public List<MultisigCreateEventResponse> getMultisigCreateEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(MULTISIGCREATE_EVENT, transactionReceipt);
        ArrayList<MultisigCreateEventResponse> responses = new ArrayList<MultisigCreateEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            MultisigCreateEventResponse typedResponse = new MultisigCreateEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<MultisigCreateEventResponse> multisigCreateEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, MultisigCreateEventResponse>() {
            @Override
            public MultisigCreateEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(MULTISIGCREATE_EVENT, log);
                MultisigCreateEventResponse typedResponse = new MultisigCreateEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<MultisigCreateEventResponse> multisigCreateEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(MULTISIGCREATE_EVENT));
        return multisigCreateEventObservable(filter);
    }

    public List<MultisigCloneEventResponse> getMultisigCloneEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(MULTISIGCLONE_EVENT, transactionReceipt);
        ArrayList<MultisigCloneEventResponse> responses = new ArrayList<MultisigCloneEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            MultisigCloneEventResponse typedResponse = new MultisigCloneEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<MultisigCloneEventResponse> multisigCloneEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, MultisigCloneEventResponse>() {
            @Override
            public MultisigCloneEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(MULTISIGCLONE_EVENT, log);
                MultisigCloneEventResponse typedResponse = new MultisigCloneEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<MultisigCloneEventResponse> multisigCloneEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(MULTISIGCLONE_EVENT));
        return multisigCloneEventObservable(filter);
    }

    public List<PrivacyRevertEventEventResponse> getPrivacyRevertEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(PRIVACYREVERTEVENT_EVENT, transactionReceipt);
        ArrayList<PrivacyRevertEventEventResponse> responses = new ArrayList<PrivacyRevertEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            PrivacyRevertEventEventResponse typedResponse = new PrivacyRevertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<PrivacyRevertEventEventResponse> privacyRevertEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, PrivacyRevertEventEventResponse>() {
            @Override
            public PrivacyRevertEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(PRIVACYREVERTEVENT_EVENT, log);
                PrivacyRevertEventEventResponse typedResponse = new PrivacyRevertEventEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<PrivacyRevertEventEventResponse> privacyRevertEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(PRIVACYREVERTEVENT_EVENT));
        return privacyRevertEventEventObservable(filter);
    }

    public List<TransferEventEventResponse> getTransferEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFEREVENT_EVENT, transactionReceipt);
        ArrayList<TransferEventEventResponse> responses = new ArrayList<TransferEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TransferEventEventResponse typedResponse = new TransferEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEventEventResponse> transferEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEventEventResponse>() {
            @Override
            public TransferEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFEREVENT_EVENT, log);
                TransferEventEventResponse typedResponse = new TransferEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEventEventResponse> transferEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFEREVENT_EVENT));
        return transferEventEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> SignTransaction(Uint32 transaction_id) {
        final WasmFunction function = new WasmFunction(FUNC_SIGNTRANSACTION, Arrays.asList(transaction_id), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> SignTransaction(Uint32 transaction_id, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SIGNTRANSACTION, Arrays.asList(transaction_id), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public static RemoteCall<Multisig> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId, WasmAddress[] owners, Uint16 required) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(owners,required));
        return deployRemoteCall(Multisig.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Multisig> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId, WasmAddress[] owners, Uint16 required) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(owners,required));
        return deployRemoteCall(Multisig.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Multisig> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, WasmAddress[] owners, Uint16 required) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(owners,required));
        return deployRemoteCall(Multisig.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<Multisig> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, WasmAddress[] owners, Uint16 required) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(owners,required));
        return deployRemoteCall(Multisig.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public RemoteCall<TransactionReceipt> ChangeOwnersAndRequired(WasmAddress[] owners, Uint16 required, Uint32 second_limit) {
        final WasmFunction function = new WasmFunction(FUNC_CHANGEOWNERSANDREQUIRED, Arrays.asList(owners,required,second_limit), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> ChangeOwnersAndRequired(WasmAddress[] owners, Uint16 required, Uint32 second_limit, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_CHANGEOWNERSANDREQUIRED, Arrays.asList(owners,required,second_limit), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<WasmAddress[]> GetOwners() {
        final WasmFunction function = new WasmFunction(FUNC_GETOWNERS, Arrays.asList(), WasmAddress[].class);
        return executeRemoteCall(function, WasmAddress[].class);
    }

    public RemoteCall<TransactionReceipt> CreateContract(byte[] args, Uint32 second_limit) {
        final WasmFunction function = new WasmFunction(FUNC_CREATECONTRACT, Arrays.asList(args,second_limit), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> CreateContract(byte[] args, Uint32 second_limit, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_CREATECONTRACT, Arrays.asList(args,second_limit), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> CloneContract(WasmAddress address, byte[] args, Uint32 second_limit) {
        final WasmFunction function = new WasmFunction(FUNC_CLONECONTRACT, Arrays.asList(address,args,second_limit), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> CloneContract(WasmAddress address, byte[] args, Uint32 second_limit, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_CLONECONTRACT, Arrays.asList(address,args,second_limit), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> PushTransaction(WasmAddress to, byte[] paras, Uint32 second_limit) {
        final WasmFunction function = new WasmFunction(FUNC_PUSHTRANSACTION, Arrays.asList(to,paras,second_limit), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> PushTransaction(WasmAddress to, byte[] paras, Uint32 second_limit, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PUSHTRANSACTION, Arrays.asList(to,paras,second_limit), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Transaction> GetTransactionInfo(Uint32 transaction_id) {
        final WasmFunction function = new WasmFunction(FUNC_GETTRANSACTIONINFO, Arrays.asList(transaction_id), Transaction.class);
        return executeRemoteCall(function, Transaction.class);
    }

    public static Multisig load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new Multisig(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static Multisig load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new Multisig(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class Transaction {
        public WasmAddress sender_;

        public WasmAddress to_;

        public byte[] paras_;

        public Int64 timestamp_;

        public Uint32 secondLimit_;

        public WasmAddress[] signedAddress_;
    }

    public static class ApprovalEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint128 arg1;
    }

    public static class CreateMultisigEventResponse {
        public Log log;

        public String topic;

        public WasmAddress[] arg1;

        public Uint16 arg2;
    }

    public static class ChangeMultisigEventResponse {
        public Log log;

        public String topic;

        public WasmAddress[] arg1;

        public Uint16 arg2;
    }

    public static class NewMultisigTransactionEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public WasmAddress arg1;

        public WasmAddress arg2;

        public byte[] arg3;

        public Uint32 arg4;
    }

    public static class SignMultisigTransactionEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public WasmAddress arg1;
    }

    public static class MultisigTransactionTimeoutEventResponse {
        public Log log;

        public String topic1;

        public String topic2;
    }

    public static class MultisigTransactionExecuteEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public WasmAddress[] arg1;
    }

    public static class MultisigCreateEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public WasmAddress arg1;
    }

    public static class MultisigCloneEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public WasmAddress arg1;
    }

    public static class PrivacyRevertEventEventResponse {
        public Log log;

        public String arg1;
    }

    public static class TransferEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint128 arg1;
    }
}
